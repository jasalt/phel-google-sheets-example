(ns phel-google-sheets-example\main
  (:use \Google_Client)
  (:use \Google_Service_Sheets))

(def keyfile "service_account_key.json")

(def google-client
  (doto (php/new Google_Client)
    (php/-> (setScopes (to-php-array [(php/:: Google_Service_Sheets SPREADSHEETS)])))
    (php/-> (setAuthConfig keyfile))))

(def sheets-service (php/new Google_Service_Sheets google-client))
(def sheets        (php/-> sheets-service spreadsheets))
(def sheets-values (php/-> sheets-service spreadsheets_values))

(defn get-sheet [sheet-id]
  (php/-> sheets (get sheet-id)))

(defn fetch-range
  "Fetch range values returning spreadsheet object (read-only)
   range-str uses format Sheet1!A1:F10"
  [sheet-id range-str]
  (php/-> sheets-values (get sheet-id range-str)))

(defn fetch-range-values
  "Fetch range values converting them to 2-dimensional Phel vector.
   range-str uses format Sheet1!A1:F10"
  [sheet-id range-str]
  (php->phel (php/-> (fetch-range sheet-id range-str) (getValues))))

(defn map-2d-vector
  "Convert spreadsheet rows into vector of maps"
  [v]
  (let [colnames (first v)  # ["ID" "Username" "Email"]
        values   (rest v)]  # [["1" "erin" "e@example.com"]...]
    (map |(for [[i colname] :pairs colnames :reduce [entry {}]]
            (put entry (keyword colname) (get $ i))) values)))

## TODO create, update, delete
## https://www.nidup.io/blog/manipulate-google-sheets-in-php-with-api/#append-a-new-row

(comment
  ## Public example sheet (read-only)
  ## https://docs.google.com/spreadsheets/d/1V4HgE8AIw37TmECLJH-te9iA2VMlRSh5ZrkVUzel69w/edit?usp=sharing
  (def sheet-id "1V4HgE8AIw37TmECLJH-te9iA2VMlRSh5ZrkVUzel69w")

  ## Sheet1:

  ##   A B
  ## 1|a|b|
  ## 2|c|d|

  (php/var_dump (fetch-range sheet-id "Sheet1"))
  ## => Outputs a lot of PHP object metadata

  (fetch-range-values sheet-id "Sheet1")
  ## => [["a" "b"] ["c" "d"]]

  ## Sheet2 (without col / row identifiers):

  ## ID Username Email
  ## 1  erin     e@example.com
  ## 2  joe      e@example.com
  ## 3  alfred   a@example.com
  ## 4  tim      t@example.com

  (fetch-range-values sheet-id "Sheet2")
  ## => [["ID" "Username" "Email"] ["1" "erin" "e@example.com"] ["2" "joe" "e@example.com"] ["3" "alfred" "a@example.com"] ["4" "tim" "t@example.com"]]

  (map-2d-vector (fetch-range-values sheet-id "Sheet2"))
  ## => [{:ID "1" :Username "erin" :Email "e@example.com"} {:ID "2" :Username "joe" :Email "e@example.com"} {:ID "3" :Username "alfred" :Email "a@example.com"} {:ID "4" :Username "tim" :Email "t@example.com"}]

  )

## NOTE: Feature request submitted for improved syntax:
## (php/-> sheets-service spreadsheets (get "my-spreadsheet-id"))
## https://github.com/phel-lang/phel-lang/issues/873
